/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

/**
 * This structure tracks both the current owner and any pending ownership transfers.
 * It's designed to be embedded within Anchor accounts that need ownership functionality.
 * This structure is 66 bytes in size.
 *
 * # Example
 * ```rust
 * #[account]
 * #[derive(Ownable)]
 * pub struct TestState {
 * pub ownership: Ownership,
 * pub data: u64,
 * }
 * ```
 */

export type Ownership = {
  /** The current owner's public key */
  owner: Option<Address>;
  /** The public key of the pending owner during a transfer, if any */
  pendingOwner: Option<Address>;
};

export type OwnershipArgs = {
  /** The current owner's public key */
  owner: OptionOrNullable<Address>;
  /** The public key of the pending owner during a transfer, if any */
  pendingOwner: OptionOrNullable<Address>;
};

export function getOwnershipEncoder(): Encoder<OwnershipArgs> {
  return getStructEncoder([
    ['owner', getOptionEncoder(getAddressEncoder())],
    ['pendingOwner', getOptionEncoder(getAddressEncoder())],
  ]);
}

export function getOwnershipDecoder(): Decoder<Ownership> {
  return getStructDecoder([
    ['owner', getOptionDecoder(getAddressDecoder())],
    ['pendingOwner', getOptionDecoder(getAddressDecoder())],
  ]);
}

export function getOwnershipCodec(): Codec<OwnershipArgs, Ownership> {
  return combineCodec(getOwnershipEncoder(), getOwnershipDecoder());
}
