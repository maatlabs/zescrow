name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - "client/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: cargo check (workspace, skip client)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        toolchain: [stable]
        features: ["--all-features", "--no-default-features"]
    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo registry & index
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --all-targets ${{ matrix.features }} --exclude client

  test:
    name: cargo test (workspace, skip client)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v3

      - name: Restore Cargo cache
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --exclude client

  clippy:
    name: cargo clippy (deny warnings, skip client)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust + clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
          override: true

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --exclude client -- -D warnings

  fmt:
    name: rustfmt (check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust + rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true

      - name: rustfmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  docs:
    name: cargo doc (check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --exclude client

  deny:
    name: cargo-deny (security & license)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install cargo-deny
        run: cargo install --locked cargo-deny

      - name: cargo deny check
        run: cargo deny check --all-features --deny advisories
